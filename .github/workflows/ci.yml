name: CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

permissions:
  contents: read
  security-events: write
  actions: read

env:
  GO_VERSION: '1.25'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: make deps

    - name: Run tests
      run: make test-unit

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage/coverage.out
        flags: unittests
        name: codecov-umbrella

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest
        args: --timeout=5m

  security:
    name: Security
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Run gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: '-no-fail -fmt sarif -out results.sarif ./...'

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: results.sarif

  build:
    name: Build (${{ matrix.goos }}/${{ matrix.goarch }})
    needs: [test, lint, security]

    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            runs-on: ubuntu-latest
          - goos: darwin
            goarch: amd64
            runs-on: macos-13
          - goos: windows
            goarch: amd64
            runs-on: windows-latest

    runs-on: ${{ matrix.runs-on }}
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ matrix.runs-on }}-go-${{ hashFiles('**/go.sum') }}

    - name: Download dependencies
      run: make deps

    - name: Build and validate binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        echo "- Building for ${{ matrix.goos }}/${{ matrix.goarch }}"
        make build

        # Validate the binary on native platform
        if [ "${{ matrix.goos }}" = "$(go env GOOS)" ] && [ "${{ matrix.goarch }}" = "$(go env GOARCH)" ]; then
          BINARY_NAME=$(make binary-name)
          echo "- Validating binary: ./bin/${BINARY_NAME}"
          ./bin/${BINARY_NAME} version
          ./bin/${BINARY_NAME} --help
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: zen-${{ matrix.goos }}-${{ matrix.goarch }}
        path: bin/
        retention-days: 30
